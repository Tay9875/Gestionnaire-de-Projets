CREATE DATABASE IF NOT EXISTS db_collab;

USE db_collab;

CREATE TABLE users(
    id_u INT NOT NULL AUTO_INCREMENT,
    username VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    pw VARCHAR(50) NOT NULL,
    
    PRIMARY KEY(id_u)
);

ADD CONSTRAINT email_constraint UNIQUE (email);

CREATE TABLE projects(
    id_p INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    created_by VARCHAR(255) NOT NULL,
    created_at TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY(id_p)
);

INSERT INTO projects(name,created_by) VALUES
    ('Gestionnaire de projets',2);

CREATE TABLE assignation(
    id_u INT NOT NULL,
    id_p INT NOT NULL
);
  
INSERT INTO assignation(id_p,id_u) VALUES
    (1,2);

CREATE TABLE tasks(
	id_t INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(255),
	description VARCHAR(255),
	status INT NOT NULL,
	assigned_to INT NOT NULL,
   	created_by INT NOT NULL,
    	created_at TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    	updated_at TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	id_p INT NOT NULL,

    	PRIMARY KEY (id_t),
    	FOREIGN KEY (assigned_to) REFERENCES users(id_u),
    	FOREIGN KEY (created_by) REFERENCES users(id_u)

);

INSERT INTO tasks(description,status,assigned_to,created_by) VALUES
    ('Creer page de connexion et inscription',3,2,2),
    ('Ajouter le php aux pages',2,2,2),
    ('Mieux organiser les necessitees du projet',1,2,2),
    ('Creer HTML des pages',3,2,2),
    ('Ajouter sur la page des taches',2,2,2),
    ('Assignation aux collaborateurs',1,2,2),
    ('Ajouter fonctions permettant de modifier les requetes/avoir plusieurs requetes sur une page',1,2,2),
    ('Finaliser le projet',1,2,2);

CREATE TABLE status(
    id_s int(1) NOT NULL,
    stat varchar(11) NOT NULL
);


INSERT INTO status(id_s, stat) VALUES
    (1,'A faire'),
    (2,'En cours'),
    (3,'Termin√©');

CREATE TABLE IF NOT EXISTS user_sessions (
    id_us INT NOT NULL AUTO_INCREMENT,
    user_id INT NOT NULL,
    token VARCHAR(255) UNIQUE,
    expiry_time TIMESTAMP,
    PRIMARY KEY (id_us),
    FOREIGN KEY (user_id) REFERENCES users(id_u)
);